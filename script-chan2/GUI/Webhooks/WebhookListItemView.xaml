<UserControl x:Class="script_chan2.GUI.WebhookListItemView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:script_chan2.GUI"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:cal="http://www.caliburnproject.org"
             mc:Ignorable="d" 
             d:DesignHeight="50" d:DesignWidth="800">
    <Grid>
        <Border BorderBrush="LightGray" BorderThickness="0 0 0 2">
            <StackPanel Orientation="Horizontal">
                <Button x:Name="Edit" Style="{StaticResource MaterialDesignIconButton}" ToolTip="Edit" Command="{x:Static md:DialogHost.OpenDialogCommand}">
                    <md:PackIcon Kind="Edit" />
                    <Button.CommandParameter>
                        <StackPanel Margin="16" Width="300">
                            <TextBox md:HintAssist.Hint="Name" Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                                <TextBox.Text>
                                    <Binding Path="EditName" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <local:NotEmptyValidationRule ValidatesOnTargetUpdated="True" ValidationStep="UpdatedValue" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBox md:HintAssist.Hint="URL" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="0 5 0 0">
                                <TextBox.Text>
                                    <Binding Path="EditUrl" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <local:NotEmptyValidationRule ValidatesOnTargetUpdated="True" ValidationStep="UpdatedValue" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 20 0 0">
                                <Button Content="Cancel" Style="{StaticResource MaterialDesignFlatButton}" Command="{x:Static md:DialogHost.CloseDialogCommand}" />
                                <Button Content="Save" Style="{StaticResource MaterialDesignFlatButton}" Command="{x:Static md:DialogHost.CloseDialogCommand}" cal:Message.Attach="[Event Click] = [Action Save]" IsEnabled="{Binding EditWebhookSaveEnabled}" />
                            </StackPanel>
                        </StackPanel>
                    </Button.CommandParameter>
                </Button>
                <Button Style="{StaticResource MaterialDesignIconButton}" ToolTip="Delete" Command="{x:Static md:DialogHost.OpenDialogCommand}">
                    <md:PackIcon Kind="Delete" />
                    <Button.CommandParameter>
                        <StackPanel Margin="16" MinWidth="200">
                            <TextBlock Text="{Binding Path=Name, StringFormat=Do you really want to delete {0}?}" />
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 20 0 0">
                                <Button Content="Cancel" Style="{StaticResource MaterialDesignFlatButton}" Command="{x:Static md:DialogHost.CloseDialogCommand}" />
                                <Button Content="Delete" Style="{StaticResource MaterialDesignFlatButton}" Command="{x:Static md:DialogHost.CloseDialogCommand}" cal:Message.Attach="[Event Click] = [Action Delete]" />
                            </StackPanel>
                        </StackPanel>
                    </Button.CommandParameter>
                </Button>
                <TextBlock Text="{Binding Name}" VerticalAlignment="Center" />
            </StackPanel>
        </Border>
    </Grid>
</UserControl>
