<UserControl x:Class="script_chan2.GUI.TournamentListItemView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:script_chan2.GUI"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:cal="http://www.caliburnproject.org"
             mc:Ignorable="d" 
             d:DesignHeight="50" d:DesignWidth="800">
    <Grid>
        <Border BorderBrush="LightGray" BorderThickness="0 0 0 2">
            <StackPanel Orientation="Horizontal">
                <Button x:Name="Edit" Style="{StaticResource MaterialDesignIconButton}" ToolTip="Edit" Command="{x:Static md:DialogHost.OpenDialogCommand}">
                    <md:PackIcon Kind="Edit" />
                    <Button.CommandParameter>
                        <Grid Margin="16" Width="400">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <TextBox md:HintAssist.Hint="Acronym" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Grid.Column="0">
                                <TextBox.Text>
                                    <Binding Path="EditAcronym" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <local:NotEmptyValidationRule ValidatesOnTargetUpdated="True" ValidationStep="UpdatedValue" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBox md:HintAssist.Hint="Name" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Grid.Column="1" Grid.ColumnSpan="3" Margin="10 0 0 0">
                                <TextBox.Text>
                                    <Binding Path="EditName" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <local:NotEmptyValidationRule ValidatesOnTargetUpdated="True" ValidationStep="UpdatedValue" />
                                            <local:WebhookExistsValidationRule ValidatesOnTargetUpdated="True" ValidationStep="UpdatedValue" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBox md:HintAssist.Hint="Room Size" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="0 10 5 0">
                                <TextBox.Text>
                                    <Binding Path="EditRoomSize" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <local:NotEmptyValidationRule ValidatesOnTargetUpdated="True" ValidationStep="UpdatedValue" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBox md:HintAssist.Hint="Team Size" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2" Margin="5 10 0 0">
                                <TextBox.Text>
                                    <Binding Path="EditTeamSize" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <local:NotEmptyValidationRule ValidatesOnTargetUpdated="True" ValidationStep="UpdatedValue" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <ComboBox md:HintAssist.Hint="Game Mode" Style="{StaticResource MaterialDesignFloatingHintComboBox}" Grid.Row="2" Grid.Column="0" Margin="0 10 5 0" ItemsSource="{Binding GameModesList}" SelectedItem="{Binding EditGameMode}" />
                            <ComboBox md:HintAssist.Hint="Win Condition" Style="{StaticResource MaterialDesignFloatingHintComboBox}" Grid.Row="2" Grid.Column="1" Margin="5 10 5 0" ItemsSource="{Binding WinConditionsList}" SelectedItem="{Binding EditWinCondition}" />
                            <ComboBox md:HintAssist.Hint="Team Mode" Style="{StaticResource MaterialDesignFloatingHintComboBox}" Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="2" Margin="5 10 0 0" ItemsSource="{Binding TeamModesList}" SelectedItem="{Binding EditTeamMode}" />
                            <TextBox md:HintAssist.Hint="Points for second ban" ToolTip="0 to disable" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Margin="0 10 5 0">
                                <TextBox.Text>
                                    <Binding Path="EditPointsForSecondBan" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <local:NotEmptyValidationRule ValidatesOnTargetUpdated="True" ValidationStep="UpdatedValue" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <CheckBox Content="All picks as freemod" Grid.Row="3" Grid.Column="2" Grid.ColumnSpan="2" Margin="5 10 0 0" IsChecked="{Binding EditAllPicksFreemod}" />
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 20 0 0" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="4">
                                <Button Content="Cancel" Style="{StaticResource MaterialDesignFlatButton}" Command="{x:Static md:DialogHost.CloseDialogCommand}" />
                                <Button Content="Save" Style="{StaticResource MaterialDesignFlatButton}" Command="{x:Static md:DialogHost.CloseDialogCommand}" cal:Message.Attach="[Event Click] = [Action Save]" IsEnabled="{Binding EditTournamentSaveEnabled}" />
                            </StackPanel>
                        </Grid>
                    </Button.CommandParameter>
                </Button>
                <Button Style="{StaticResource MaterialDesignIconButton}" ToolTip="Webhooks" Command="{x:Static md:DialogHost.OpenDialogCommand}">
                    <md:PackIcon Kind="Discord" />
                    <Button.CommandParameter>
                        <Grid Margin="16" Width="500" Height="300">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Text="{Binding Path=Name, StringFormat=Webhooks of {0}}" FontSize="20" />
                            <ScrollViewer Grid.Row="1">
                                <ItemsControl ItemsSource="{Binding WebhooksViews}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <ContentControl cal:View.Model="{Binding}" />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ScrollViewer>
                            <Button Grid.Row="2" HorizontalAlignment="Right" Content="Close" Style="{StaticResource MaterialDesignFlatButton}" Command="{x:Static md:DialogHost.CloseDialogCommand}" />
                        </Grid>
                    </Button.CommandParameter>
                </Button>
                <Button Style="{StaticResource MaterialDesignIconButton}" ToolTip="Delete" Command="{x:Static md:DialogHost.OpenDialogCommand}">
                    <md:PackIcon Kind="Delete" />
                    <Button.CommandParameter>
                        <StackPanel Margin="16" MinWidth="200">
                            <TextBlock Text="{Binding Path=Name, StringFormat=Do you really want to delete {0}?}" />
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 20 0 0">
                                <Button Content="Cancel" Style="{StaticResource MaterialDesignFlatButton}" Command="{x:Static md:DialogHost.CloseDialogCommand}" />
                                <Button Content="Delete" Style="{StaticResource MaterialDesignFlatButton}" Command="{x:Static md:DialogHost.CloseDialogCommand}" cal:Message.Attach="[Event Click] = [Action Delete]" />
                            </StackPanel>
                        </StackPanel>
                    </Button.CommandParameter>
                </Button>
                <TextBlock Text="{Binding Name}" VerticalAlignment="Center" />
            </StackPanel>
        </Border>
    </Grid>
</UserControl>
