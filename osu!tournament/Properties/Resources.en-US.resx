<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Button_Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Button_Connect" xml:space="preserve">
    <value>Connect</value>
  </data>
  <data name="Button_Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Button_Disconnect" xml:space="preserve">
    <value>Disconnect</value>
  </data>
  <data name="Button_Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ErrorView_Close" xml:space="preserve">
    <value>Close and try again later</value>
  </data>
  <data name="ErrorView_Message" xml:space="preserve">
    <value>API is not answering :(</value>
  </data>
  <data name="ErrorView_Status" xml:space="preserve">
    <value>Check osu!status twitter</value>
  </data>
  <data name="Error_ApiKeyInvalid" xml:space="preserve">
    <value>The osu!api key is not valid!</value>
  </data>
  <data name="Error_BeatmapAlreadyInMappool" xml:space="preserve">
    <value>The beatmap is already in this mappool!</value>
  </data>
  <data name="Error_BeatmapIdNotFound" xml:space="preserve">
    <value>The beatmap does not exist!</value>
  </data>
  <data name="Error_IdIsNotNumber" xml:space="preserve">
    <value>The entered id is not a valid number!</value>
  </data>
  <data name="Error_MissingAcronym" xml:space="preserve">
    <value>Do not forget to set the acronym of your game before creating it!</value>
  </data>
  <data name="Error_RoomDoesNotExist" xml:space="preserve">
    <value>The room doesn't exist in the view model</value>
  </data>
  <data name="Error_SameTeam" xml:space="preserve">
    <value>You can't use the same team twice!</value>
  </data>
  <data name="Error_Title" xml:space="preserve">
    <value>Whoops!</value>
  </data>
  <data name="Error_ValueNotLetter" xml:space="preserve">
    <value>Please, enter a letter!</value>
  </data>
  <data name="General_Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="General_Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="Icon" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\favicon.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="LoggerConfig" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\logger.xml;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="MainView_Mappools" xml:space="preserve">
    <value>Mappools</value>
  </data>
  <data name="MainView_Options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="MainView_Overview" xml:space="preserve">
    <value>Overview</value>
  </data>
  <data name="MainView_Rooms" xml:space="preserve">
    <value>Rooms</value>
  </data>
  <data name="MainView_Teams" xml:space="preserve">
    <value>Teams</value>
  </data>
  <data name="MainView_UpdateAvailable" xml:space="preserve">
    <value>Update available, click to download.</value>
  </data>
  <data name="MappoolView_AddBeatmap" xml:space="preserve">
    <value>Add a beatmap</value>
  </data>
  <data name="MappoolView_DeleteBeatmapErrorMappoolInUse" xml:space="preserve">
    <value>Beatmap could not be deleted because the mappool is used in a room.</value>
  </data>
  <data name="MappoolView_DeleteBeatmapMessage" xml:space="preserve">
    <value>Are you sure you want to delete the beatmap?</value>
  </data>
  <data name="MappoolView_DeleteBeatmapTitle" xml:space="preserve">
    <value>Delete beatmap</value>
  </data>
  <data name="MappoolView_EnterBeatmapIdMessage" xml:space="preserve">
    <value>Enter the beatmap id (Must be a valid number). You can use ';' as a separator</value>
  </data>
  <data name="MappoolView_EnterBeatmapIdTitle" xml:space="preserve">
    <value>Add Beatmap</value>
  </data>
  <data name="OptionsView_AdminWebhook" xml:space="preserve">
    <value>Admin webhook (needed to enable the feature)</value>
  </data>
  <data name="OptionsView_ApiHelp" xml:space="preserve">
    <value>Click here to get your API key.</value>
  </data>
  <data name="OptionsView_ApiKey" xml:space="preserve">
    <value>osu!api key (required)</value>
  </data>
  <data name="OptionsView_BO" xml:space="preserve">
    <value>Default BO when creating a new room</value>
  </data>
  <data name="OptionsView_Cooldown" xml:space="preserve">
    <value>Time between messages (in ms)</value>
  </data>
  <data name="OptionsView_GameMode" xml:space="preserve">
    <value>Default GameMode for a new room</value>
  </data>
  <data name="OptionsView_General" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="OptionsView_IRC" xml:space="preserve">
    <value>IRC</value>
  </data>
  <data name="OptionsView_IRCHelp" xml:space="preserve">
    <value>The IRC password is different from your osu account password. Click here to get your IRC password.</value>
  </data>
  <data name="OptionsView_Mappool" xml:space="preserve">
    <value>Default Mappool for a new room</value>
  </data>
  <data name="OptionsView_MappoolWatermark" xml:space="preserve">
    <value>You can leave it blank if you want</value>
  </data>
  <data name="OptionsView_MpTimer" xml:space="preserve">
    <value>Mp timer duration (0 = deactivated)</value>
  </data>
  <data name="OptionsView_MpTimerTooltip" xml:space="preserve">
    <value>The mp timer command is triggered after each map played</value>
  </data>
  <data name="OptionsView_PublicWebhook" xml:space="preserve">
    <value>Public channel webhook</value>
  </data>
  <data name="OptionsView_RoomOptions" xml:space="preserve">
    <value>Room options</value>
  </data>
  <data name="OvRoomView_Batch" xml:space="preserve">
    <value>Batch</value>
  </data>
  <data name="OvRoomView_Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="OvRoomView_Link" xml:space="preserve">
    <value>Link</value>
  </data>
  <data name="OvRoomView_NextTeamPick" xml:space="preserve">
    <value>Next team to pick</value>
  </data>
  <data name="OvRoomView_Scores" xml:space="preserve">
    <value>Scores</value>
  </data>
  <data name="OvRoomView_Winner" xml:space="preserve">
    <value>Winner</value>
  </data>
  <data name="OvView_Acronym" xml:space="preserve">
    <value>Acronym</value>
  </data>
  <data name="OvView_Admins" xml:space="preserve">
    <value>Admins (addref)</value>
  </data>
  <data name="OvView_AdminsWatermark" xml:space="preserve">
    <value>You can leave it empty or add usernames separated by ;</value>
  </data>
  <data name="OvView_BatchFilterWatermark" xml:space="preserve">
    <value>You can select a batch letter to filter your matches</value>
  </data>
  <data name="OvView_BatchLetter" xml:space="preserve">
    <value>Batch letter</value>
  </data>
  <data name="OvView_BlueTeam" xml:space="preserve">
    <value>Blue Team</value>
  </data>
  <data name="OvView_CreateMatch" xml:space="preserve">
    <value>Create a match</value>
  </data>
  <data name="OvView_CreateMatchInOverview" xml:space="preserve">
    <value>Create the match in the overview</value>
  </data>
  <data name="OvView_DefaultMapId" xml:space="preserve">
    <value>Default map id</value>
  </data>
  <data name="OvView_GameMode" xml:space="preserve">
    <value>Game mode</value>
  </data>
  <data name="OvView_PlayersPerTeam" xml:space="preserve">
    <value>Players per team</value>
  </data>
  <data name="OvView_PleaseSelectTeam" xml:space="preserve">
    <value>Please select a team...</value>
  </data>
  <data name="OvView_RedTeam" xml:space="preserve">
    <value>Red Team</value>
  </data>
  <data name="OvView_RoomConfiguration" xml:space="preserve">
    <value>Room configuration</value>
  </data>
  <data name="OvView_ScoreMode" xml:space="preserve">
    <value>Score mode</value>
  </data>
  <data name="OvView_Size" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="OvView_TeamMode" xml:space="preserve">
    <value>Team mode</value>
  </data>
  <data name="OvView_WelcomeMessage" xml:space="preserve">
    <value>Welcome Message</value>
  </data>
  <data name="Update_NewVersionError" xml:space="preserve">
    <value>An error occured during the download, make sure you are running the tool with administrator rights.</value>
  </data>
  <data name="Update_NewVersionMessage" xml:space="preserve">
    <value>Would you like to download the latest version? The application will close.</value>
  </data>
  <data name="Update_NewVersionTitle" xml:space="preserve">
    <value>New version available</value>
  </data>
  <data name="Wait_CreatingRoom" xml:space="preserve">
    <value>Creating the room...</value>
  </data>
  <data name="Wait_Title" xml:space="preserve">
    <value>Please wait</value>
  </data>
</root>